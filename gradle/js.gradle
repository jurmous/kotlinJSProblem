// Gradle script to setup a JS multi-platform project
ext.setupJS = { runTests ->
    apply {
        plugin("com.moowork.node")
    }

    kotlin {
        js {
            compilations.all {
                kotlinOptions {
                    sourceMap = true
                    moduleKind = "umd"
                    metaInfo = true
                }
            }
            compilations.main.defaultSourceSet {
                dependencies {
                    implementation kotlin('stdlib-js')
                }
            }
        }
    }

    if (runTests == null || runTests == true) {
        def projectName = name

        // Find kotlin targets that are tests for JS platform and set them up with Mocha
        kotlin.targets.matching { it.platformType.name == 'js' }.all { target->
            def testDir = "${buildDir}/jsTest"
            def testCompilation = target.compilations["test"]
            def mainCompilation = target.compilations["main"]

            def testCompilationTask = tasks[testCompilation.compileKotlinTaskName]
            def mainCompilationTask = tasks[mainCompilation.compileKotlinTaskName]
            def targetName = target.name

            def syncMainDependencies = task("${targetName}SyncTestDependencies",
                    type: Sync,
                    group: 'build',
                    dependsOn: [mainCompilationTask]) {
                from mainCompilationTask.destinationDir
                into "${testDir}/node_modules"

                def configuration = testCompilation.runtimeDependencyFiles
                from(files {
                    configuration.collect { File file ->
                        file.name.endsWith(".jar") ?
                                zipTree(file.absolutePath).matching {
                                    include '*.js'
                                    include '*.js.map'
                                } :
                                files()
                    }
                }.builtBy(configuration))
            }

            // Copy test files
            def testFilesSync = task("${targetName}SyncTestOutput",
                    type: Sync,
                    group: 'build',
                    dependsOn: [compileTestKotlinJs]) {
                from compileTestKotlinJs.outputFile.parentFile.path
                include "*.js"
                include "*.js.map"
                into testDir
            }

            // Run mocha with node
            def mochaTask = task("mocha${targetName.capitalize()}Test",
                    group: 'verification',
                    type: NodeTask,
                    dependsOn: [testCompilationTask, syncMainDependencies, testFilesSync]) {
                script = file("${project.rootDir}/.nodeTest/node_modules/mocha/bin/mocha")
                args = ["${testDir}/${projectName}_test.js", '--require', 'source-map-support/register']
            }
            tasks["${targetName}Test"].dependsOn mochaTask
        }
    }
}
